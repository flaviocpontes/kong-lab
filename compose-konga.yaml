networks:
  konga-network:

services:
  konga_database:
    image: postgres:13-alpine
    restart: on-failure
    networks:
      - konga-network
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kongpass
      POSTGRES_DB: kong
      PGUSER: kong
      PGPASSWORD: kongpass
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 5

  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong:kongpass@konga_database:5432/kong"
    networks:
      - konga-network
    restart: on-failure
    links:
      - konga_database
    depends_on:
      konga_database:
        condition: service_healthy

  konga:
    image: pantsel/konga:next
    restart: always
    networks:
      - konga-network
    environment:
      DB_ADAPTER: postgres
      DB_HOST: konga_database
      DB_USER: kong
      DB_PASSWORD: kongpass
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: kong
      NODE_ENV: production
    depends_on:
      konga_database:
        condition: service_healthy
      konga-prepare:
        condition: service_completed_successfully
    ports:
      - "1337:1337"